; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 11
; Bound: 152
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %v_fragTexCoord %v_normal %v_fragPos %v_tangentLightPos %v_tangentFragPos %v_tangentCamPos %outColor %bloomColor %v_tangent
               OpExecutionMode %main OriginUpperLeft
               OpSource GLSL 450
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %texColor "texColor"
               OpName %u_texSampler "u_texSampler"
               OpName %v_fragTexCoord "v_fragTexCoord"
               OpName %color "color"
               OpName %n "n"
               OpName %v_normal "v_normal"
               OpName %l "l"
               OpName %UniformLighting "UniformLighting"
               OpMemberName %UniformLighting 0 "lightPos"
               OpMemberName %UniformLighting 1 "camPos"
               OpName %u_lighting "u_lighting"
               OpName %v_fragPos "v_fragPos"
               OpName %c "c"
               OpName %DataPushConstant "DataPushConstant"
               OpMemberName %DataPushConstant 0 "isNormalMapping"
               OpName %p_const "p_const"
               OpName %normal "normal"
               OpName %u_normalSampler "u_normalSampler"
               OpName %v_tangentLightPos "v_tangentLightPos"
               OpName %v_tangentFragPos "v_tangentFragPos"
               OpName %v_tangentCamPos "v_tangentCamPos"
               OpName %r "r"
               OpName %h "h"
               OpName %ambient "ambient"
               OpName %diff "diff"
               OpName %diffuse "diffuse"
               OpName %spec "spec"
               OpName %specular "specular"
               OpName %outColor "outColor"
               OpName %emit "emit"
               OpName %u_emissiveSampler "u_emissiveSampler"
               OpName %bloomColor "bloomColor"
               OpName %v_tangent "v_tangent"
               OpDecorate %u_texSampler DescriptorSet 1
               OpDecorate %u_texSampler Binding 2
               OpDecorate %v_fragTexCoord Location 0
               OpDecorate %v_normal Location 5
               OpMemberDecorate %UniformLighting 0 Offset 0
               OpMemberDecorate %UniformLighting 1 Offset 16
               OpDecorate %UniformLighting Block
               OpDecorate %u_lighting DescriptorSet 0
               OpDecorate %u_lighting Binding 1
               OpDecorate %v_fragPos Location 4
               OpMemberDecorate %DataPushConstant 0 Offset 0
               OpDecorate %DataPushConstant Block
               OpDecorate %u_normalSampler DescriptorSet 1
               OpDecorate %u_normalSampler Binding 3
               OpDecorate %v_tangentLightPos Location 2
               OpDecorate %v_tangentFragPos Location 1
               OpDecorate %v_tangentCamPos Location 3
               OpDecorate %outColor Location 0
               OpDecorate %u_emissiveSampler DescriptorSet 1
               OpDecorate %u_emissiveSampler Binding 4
               OpDecorate %bloomColor Location 1
               OpDecorate %v_tangent Location 6
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
         %10 = OpTypeImage %float 2D 0 0 0 1 Unknown
         %11 = OpTypeSampledImage %10
%_ptr_UniformConstant_11 = OpTypePointer UniformConstant %11
%u_texSampler = OpVariable %_ptr_UniformConstant_11 UniformConstant
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
%v_fragTexCoord = OpVariable %_ptr_Input_v2float Input
    %v3float = OpTypeVector %float 3
%_ptr_Function_v3float = OpTypePointer Function %v3float
%_ptr_Input_v3float = OpTypePointer Input %v3float
   %v_normal = OpVariable %_ptr_Input_v3float Input
%UniformLighting = OpTypeStruct %v3float %v3float
%_ptr_Uniform_UniformLighting = OpTypePointer Uniform %UniformLighting
 %u_lighting = OpVariable %_ptr_Uniform_UniformLighting Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
  %v_fragPos = OpVariable %_ptr_Input_v3float Input
      %int_1 = OpConstant %int 1
%DataPushConstant = OpTypeStruct %int
%_ptr_PushConstant_DataPushConstant = OpTypePointer PushConstant %DataPushConstant
    %p_const = OpVariable %_ptr_PushConstant_DataPushConstant PushConstant
%_ptr_PushConstant_int = OpTypePointer PushConstant %int
       %bool = OpTypeBool
%u_normalSampler = OpVariable %_ptr_UniformConstant_11 UniformConstant
    %float_2 = OpConstant %float 2
    %float_1 = OpConstant %float 1
%v_tangentLightPos = OpVariable %_ptr_Input_v3float Input
%v_tangentFragPos = OpVariable %_ptr_Input_v3float Input
%v_tangentCamPos = OpVariable %_ptr_Input_v3float Input
%float_0_200000003 = OpConstant %float 0.200000003
%_ptr_Function_float = OpTypePointer Function %float
    %float_0 = OpConstant %float 0
   %float_32 = OpConstant %float 32
        %117 = OpConstantComposite %v3float %float_0_200000003 %float_0_200000003 %float_0_200000003
%_ptr_Output_v4float = OpTypePointer Output %v4float
   %outColor = OpVariable %_ptr_Output_v4float Output
       %uint = OpTypeInt 32 0
     %uint_3 = OpConstant %uint 3
%u_emissiveSampler = OpVariable %_ptr_UniformConstant_11 UniformConstant
        %142 = OpConstantComposite %v3float %float_1 %float_1 %float_1
 %bloomColor = OpVariable %_ptr_Output_v4float Output
        %150 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
  %v_tangent = OpVariable %_ptr_Input_v3float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
   %texColor = OpVariable %_ptr_Function_v4float Function
      %color = OpVariable %_ptr_Function_v3float Function
          %n = OpVariable %_ptr_Function_v3float Function
          %l = OpVariable %_ptr_Function_v3float Function
          %c = OpVariable %_ptr_Function_v3float Function
     %normal = OpVariable %_ptr_Function_v3float Function
          %r = OpVariable %_ptr_Function_v3float Function
          %h = OpVariable %_ptr_Function_v3float Function
    %ambient = OpVariable %_ptr_Function_v3float Function
       %diff = OpVariable %_ptr_Function_float Function
    %diffuse = OpVariable %_ptr_Function_v3float Function
       %spec = OpVariable %_ptr_Function_float Function
   %specular = OpVariable %_ptr_Function_v3float Function
       %emit = OpVariable %_ptr_Function_v3float Function
         %14 = OpLoad %11 %u_texSampler
         %18 = OpLoad %v2float %v_fragTexCoord
         %19 = OpImageSampleImplicitLod %v4float %14 %18
               OpStore %texColor %19
         %23 = OpLoad %v4float %texColor
         %24 = OpVectorShuffle %v3float %23 %23 0 1 2
               OpStore %color %24
         %28 = OpLoad %v3float %v_normal
         %29 = OpExtInst %v3float %1 Normalize %28
               OpStore %n %29
         %37 = OpAccessChain %_ptr_Uniform_v3float %u_lighting %int_0
         %38 = OpLoad %v3float %37
         %40 = OpLoad %v3float %v_fragPos
         %41 = OpFSub %v3float %38 %40
         %42 = OpExtInst %v3float %1 Normalize %41
               OpStore %l %42
         %45 = OpAccessChain %_ptr_Uniform_v3float %u_lighting %int_1
         %46 = OpLoad %v3float %45
         %47 = OpLoad %v3float %v_fragPos
         %48 = OpFSub %v3float %46 %47
         %49 = OpExtInst %v3float %1 Normalize %48
               OpStore %c %49
         %54 = OpAccessChain %_ptr_PushConstant_int %p_const %int_0
         %55 = OpLoad %int %54
         %57 = OpIEqual %bool %55 %int_1
               OpSelectionMerge %59 None
               OpBranchConditional %57 %58 %59
         %58 = OpLabel
         %62 = OpLoad %11 %u_normalSampler
         %63 = OpLoad %v2float %v_fragTexCoord
         %64 = OpImageSampleImplicitLod %v4float %62 %63
         %65 = OpVectorShuffle %v3float %64 %64 0 1 2
               OpStore %normal %65
         %66 = OpLoad %v3float %normal
         %68 = OpVectorTimesScalar %v3float %66 %float_2
         %70 = OpCompositeConstruct %v3float %float_1 %float_1 %float_1
         %71 = OpFSub %v3float %68 %70
         %72 = OpExtInst %v3float %1 Normalize %71
               OpStore %n %72
         %74 = OpLoad %v3float %v_tangentLightPos
         %76 = OpLoad %v3float %v_tangentFragPos
         %77 = OpFSub %v3float %74 %76
         %78 = OpExtInst %v3float %1 Normalize %77
               OpStore %l %78
         %80 = OpLoad %v3float %v_tangentCamPos
         %81 = OpLoad %v3float %v_tangentFragPos
         %82 = OpFSub %v3float %80 %81
         %83 = OpExtInst %v3float %1 Normalize %82
               OpStore %c %83
               OpBranch %59
         %59 = OpLabel
         %85 = OpLoad %v3float %l
         %86 = OpFNegate %v3float %85
         %87 = OpLoad %v3float %n
         %88 = OpExtInst %v3float %1 Reflect %86 %87
               OpStore %r %88
         %90 = OpLoad %v3float %l
         %91 = OpLoad %v3float %c
         %92 = OpFAdd %v3float %90 %91
         %93 = OpExtInst %v3float %1 Normalize %92
               OpStore %h %93
         %96 = OpLoad %v3float %color
         %97 = OpVectorTimesScalar %v3float %96 %float_0_200000003
               OpStore %ambient %97
        %100 = OpLoad %v3float %l
        %101 = OpLoad %v3float %n
        %102 = OpDot %float %100 %101
        %104 = OpExtInst %float %1 FMax %102 %float_0
               OpStore %diff %104
        %106 = OpLoad %float %diff
        %107 = OpLoad %v3float %color
        %108 = OpVectorTimesScalar %v3float %107 %106
               OpStore %diffuse %108
        %110 = OpLoad %v3float %n
        %111 = OpLoad %v3float %h
        %112 = OpDot %float %110 %111
        %113 = OpExtInst %float %1 FMax %112 %float_0
        %115 = OpExtInst %float %1 Pow %113 %float_32
               OpStore %spec %115
        %118 = OpLoad %float %spec
        %119 = OpVectorTimesScalar %v3float %117 %118
               OpStore %specular %119
        %122 = OpLoad %v3float %ambient
        %123 = OpLoad %v3float %diffuse
        %124 = OpFAdd %v3float %122 %123
        %125 = OpLoad %v3float %specular
        %126 = OpFAdd %v3float %124 %125
        %129 = OpAccessChain %_ptr_Function_float %texColor %uint_3
        %130 = OpLoad %float %129
        %131 = OpCompositeExtract %float %126 0
        %132 = OpCompositeExtract %float %126 1
        %133 = OpCompositeExtract %float %126 2
        %134 = OpCompositeConstruct %v4float %131 %132 %133 %130
               OpStore %outColor %134
        %137 = OpLoad %11 %u_emissiveSampler
        %138 = OpLoad %v2float %v_fragTexCoord
        %139 = OpImageSampleImplicitLod %v4float %137 %138
        %140 = OpVectorShuffle %v3float %139 %139 0 1 2
               OpStore %emit %140
        %141 = OpLoad %v3float %emit
        %143 = OpDot %float %141 %142
        %144 = OpFUnordNotEqual %bool %143 %float_0
               OpSelectionMerge %146 None
               OpBranchConditional %144 %145 %149
        %145 = OpLabel
        %148 = OpLoad %v4float %texColor
               OpStore %bloomColor %148
               OpBranch %146
        %149 = OpLabel
               OpStore %bloomColor %150
               OpBranch %146
        %146 = OpLabel
               OpReturn
               OpFunctionEnd
