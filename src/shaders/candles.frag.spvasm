; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 11
; Bound: 156
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %v_fragTexCoord %v_normal %v_fragPos %v_tangentLightPos %v_tangentFragPos %v_tangentCamPos %outColor %bloomColor %v_tangent
               OpExecutionMode %main OriginUpperLeft
               OpSource GLSL 450
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %texColor "texColor"
               OpName %u_texSampler "u_texSampler"
               OpName %v_fragTexCoord "v_fragTexCoord"
               OpName %color "color"
               OpName %n "n"
               OpName %v_normal "v_normal"
               OpName %l "l"
               OpName %CandlesLightingTransform "CandlesLightingTransform"
               OpMemberName %CandlesLightingTransform 0 "viewProj"
               OpMemberName %CandlesLightingTransform 1 "lightPos"
               OpMemberName %CandlesLightingTransform 2 "camPos"
               OpName %u_lightingTransform "u_lightingTransform"
               OpName %v_fragPos "v_fragPos"
               OpName %c "c"
               OpName %DataPushConstant "DataPushConstant"
               OpMemberName %DataPushConstant 0 "isNormalMapping"
               OpName %p_const "p_const"
               OpName %normal "normal"
               OpName %u_normalSampler "u_normalSampler"
               OpName %v_tangentLightPos "v_tangentLightPos"
               OpName %v_tangentFragPos "v_tangentFragPos"
               OpName %v_tangentCamPos "v_tangentCamPos"
               OpName %r "r"
               OpName %h "h"
               OpName %ambient "ambient"
               OpName %diff "diff"
               OpName %diffuse "diffuse"
               OpName %spec "spec"
               OpName %specular "specular"
               OpName %outColor "outColor"
               OpName %emit "emit"
               OpName %u_emissiveSampler "u_emissiveSampler"
               OpName %bloomColor "bloomColor"
               OpName %v_tangent "v_tangent"
               OpDecorate %u_texSampler DescriptorSet 1
               OpDecorate %u_texSampler Binding 2
               OpDecorate %v_fragTexCoord Location 0
               OpDecorate %v_normal Location 5
               OpMemberDecorate %CandlesLightingTransform 0 ColMajor
               OpMemberDecorate %CandlesLightingTransform 0 Offset 0
               OpMemberDecorate %CandlesLightingTransform 0 MatrixStride 16
               OpMemberDecorate %CandlesLightingTransform 1 Offset 64
               OpMemberDecorate %CandlesLightingTransform 2 Offset 80
               OpDecorate %CandlesLightingTransform Block
               OpDecorate %u_lightingTransform DescriptorSet 0
               OpDecorate %u_lightingTransform Binding 1
               OpDecorate %v_fragPos Location 4
               OpMemberDecorate %DataPushConstant 0 Offset 0
               OpDecorate %DataPushConstant Block
               OpDecorate %u_normalSampler DescriptorSet 1
               OpDecorate %u_normalSampler Binding 3
               OpDecorate %v_tangentLightPos Location 2
               OpDecorate %v_tangentFragPos Location 1
               OpDecorate %v_tangentCamPos Location 3
               OpDecorate %outColor Location 0
               OpDecorate %u_emissiveSampler DescriptorSet 1
               OpDecorate %u_emissiveSampler Binding 4
               OpDecorate %bloomColor Location 1
               OpDecorate %v_tangent Location 6
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
         %10 = OpTypeImage %float 2D 0 0 0 1 Unknown
         %11 = OpTypeSampledImage %10
%_ptr_UniformConstant_11 = OpTypePointer UniformConstant %11
%u_texSampler = OpVariable %_ptr_UniformConstant_11 UniformConstant
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
%v_fragTexCoord = OpVariable %_ptr_Input_v2float Input
    %v3float = OpTypeVector %float 3
%_ptr_Function_v3float = OpTypePointer Function %v3float
%_ptr_Input_v3float = OpTypePointer Input %v3float
   %v_normal = OpVariable %_ptr_Input_v3float Input
%mat4v4float = OpTypeMatrix %v4float 4
%CandlesLightingTransform = OpTypeStruct %mat4v4float %v3float %v3float
%_ptr_Uniform_CandlesLightingTransform = OpTypePointer Uniform %CandlesLightingTransform
%u_lightingTransform = OpVariable %_ptr_Uniform_CandlesLightingTransform Uniform
        %int = OpTypeInt 32 1
      %int_1 = OpConstant %int 1
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
  %v_fragPos = OpVariable %_ptr_Input_v3float Input
      %int_2 = OpConstant %int 2
%DataPushConstant = OpTypeStruct %int
%_ptr_PushConstant_DataPushConstant = OpTypePointer PushConstant %DataPushConstant
    %p_const = OpVariable %_ptr_PushConstant_DataPushConstant PushConstant
      %int_0 = OpConstant %int 0
%_ptr_PushConstant_int = OpTypePointer PushConstant %int
       %bool = OpTypeBool
%u_normalSampler = OpVariable %_ptr_UniformConstant_11 UniformConstant
    %float_2 = OpConstant %float 2
    %float_1 = OpConstant %float 1
%v_tangentLightPos = OpVariable %_ptr_Input_v3float Input
%v_tangentFragPos = OpVariable %_ptr_Input_v3float Input
%v_tangentCamPos = OpVariable %_ptr_Input_v3float Input
%float_0_100000001 = OpConstant %float 0.100000001
%_ptr_Function_float = OpTypePointer Function %float
    %float_0 = OpConstant %float 0
%float_0_699999988 = OpConstant %float 0.699999988
   %float_32 = OpConstant %float 32
        %121 = OpConstantComposite %v3float %float_0_100000001 %float_0_100000001 %float_0_100000001
%_ptr_Output_v4float = OpTypePointer Output %v4float
   %outColor = OpVariable %_ptr_Output_v4float Output
       %uint = OpTypeInt 32 0
     %uint_3 = OpConstant %uint 3
%u_emissiveSampler = OpVariable %_ptr_UniformConstant_11 UniformConstant
        %146 = OpConstantComposite %v3float %float_1 %float_1 %float_1
 %bloomColor = OpVariable %_ptr_Output_v4float Output
        %154 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
  %v_tangent = OpVariable %_ptr_Input_v3float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
   %texColor = OpVariable %_ptr_Function_v4float Function
      %color = OpVariable %_ptr_Function_v3float Function
          %n = OpVariable %_ptr_Function_v3float Function
          %l = OpVariable %_ptr_Function_v3float Function
          %c = OpVariable %_ptr_Function_v3float Function
     %normal = OpVariable %_ptr_Function_v3float Function
          %r = OpVariable %_ptr_Function_v3float Function
          %h = OpVariable %_ptr_Function_v3float Function
    %ambient = OpVariable %_ptr_Function_v3float Function
       %diff = OpVariable %_ptr_Function_float Function
    %diffuse = OpVariable %_ptr_Function_v3float Function
       %spec = OpVariable %_ptr_Function_float Function
   %specular = OpVariable %_ptr_Function_v3float Function
       %emit = OpVariable %_ptr_Function_v3float Function
         %14 = OpLoad %11 %u_texSampler
         %18 = OpLoad %v2float %v_fragTexCoord
         %19 = OpImageSampleImplicitLod %v4float %14 %18
               OpStore %texColor %19
         %23 = OpLoad %v4float %texColor
         %24 = OpVectorShuffle %v3float %23 %23 0 1 2
               OpStore %color %24
         %28 = OpLoad %v3float %v_normal
         %29 = OpExtInst %v3float %1 Normalize %28
               OpStore %n %29
         %38 = OpAccessChain %_ptr_Uniform_v3float %u_lightingTransform %int_1
         %39 = OpLoad %v3float %38
         %41 = OpLoad %v3float %v_fragPos
         %42 = OpFSub %v3float %39 %41
         %43 = OpExtInst %v3float %1 Normalize %42
               OpStore %l %43
         %46 = OpAccessChain %_ptr_Uniform_v3float %u_lightingTransform %int_2
         %47 = OpLoad %v3float %46
         %48 = OpLoad %v3float %v_fragPos
         %49 = OpFSub %v3float %47 %48
         %50 = OpExtInst %v3float %1 Normalize %49
               OpStore %c %50
         %56 = OpAccessChain %_ptr_PushConstant_int %p_const %int_0
         %57 = OpLoad %int %56
         %59 = OpIEqual %bool %57 %int_1
               OpSelectionMerge %61 None
               OpBranchConditional %59 %60 %61
         %60 = OpLabel
         %64 = OpLoad %11 %u_normalSampler
         %65 = OpLoad %v2float %v_fragTexCoord
         %66 = OpImageSampleImplicitLod %v4float %64 %65
         %67 = OpVectorShuffle %v3float %66 %66 0 1 2
               OpStore %normal %67
         %68 = OpLoad %v3float %normal
         %70 = OpVectorTimesScalar %v3float %68 %float_2
         %72 = OpCompositeConstruct %v3float %float_1 %float_1 %float_1
         %73 = OpFSub %v3float %70 %72
         %74 = OpExtInst %v3float %1 Normalize %73
               OpStore %n %74
         %76 = OpLoad %v3float %v_tangentLightPos
         %78 = OpLoad %v3float %v_tangentFragPos
         %79 = OpFSub %v3float %76 %78
         %80 = OpExtInst %v3float %1 Normalize %79
               OpStore %l %80
         %82 = OpLoad %v3float %v_tangentCamPos
         %83 = OpLoad %v3float %v_tangentFragPos
         %84 = OpFSub %v3float %82 %83
         %85 = OpExtInst %v3float %1 Normalize %84
               OpStore %c %85
               OpBranch %61
         %61 = OpLabel
         %87 = OpLoad %v3float %l
         %88 = OpFNegate %v3float %87
         %89 = OpLoad %v3float %n
         %90 = OpExtInst %v3float %1 Reflect %88 %89
               OpStore %r %90
         %92 = OpLoad %v3float %l
         %93 = OpLoad %v3float %c
         %94 = OpFAdd %v3float %92 %93
         %95 = OpExtInst %v3float %1 Normalize %94
               OpStore %h %95
         %98 = OpLoad %v3float %color
         %99 = OpVectorTimesScalar %v3float %98 %float_0_100000001
               OpStore %ambient %99
        %102 = OpLoad %v3float %l
        %103 = OpLoad %v3float %n
        %104 = OpDot %float %102 %103
        %106 = OpExtInst %float %1 FMax %104 %float_0
        %108 = OpFMul %float %106 %float_0_699999988
               OpStore %diff %108
        %110 = OpLoad %float %diff
        %111 = OpLoad %v3float %color
        %112 = OpVectorTimesScalar %v3float %111 %110
               OpStore %diffuse %112
        %114 = OpLoad %v3float %n
        %115 = OpLoad %v3float %h
        %116 = OpDot %float %114 %115
        %117 = OpExtInst %float %1 FMax %116 %float_0
        %119 = OpExtInst %float %1 Pow %117 %float_32
               OpStore %spec %119
        %122 = OpLoad %float %spec
        %123 = OpVectorTimesScalar %v3float %121 %122
               OpStore %specular %123
        %126 = OpLoad %v3float %ambient
        %127 = OpLoad %v3float %diffuse
        %128 = OpFAdd %v3float %126 %127
        %129 = OpLoad %v3float %specular
        %130 = OpFAdd %v3float %128 %129
        %133 = OpAccessChain %_ptr_Function_float %texColor %uint_3
        %134 = OpLoad %float %133
        %135 = OpCompositeExtract %float %130 0
        %136 = OpCompositeExtract %float %130 1
        %137 = OpCompositeExtract %float %130 2
        %138 = OpCompositeConstruct %v4float %135 %136 %137 %134
               OpStore %outColor %138
        %141 = OpLoad %11 %u_emissiveSampler
        %142 = OpLoad %v2float %v_fragTexCoord
        %143 = OpImageSampleImplicitLod %v4float %141 %142
        %144 = OpVectorShuffle %v3float %143 %143 0 1 2
               OpStore %emit %144
        %145 = OpLoad %v3float %emit
        %147 = OpDot %float %145 %146
        %148 = OpFUnordNotEqual %bool %147 %float_0
               OpSelectionMerge %150 None
               OpBranchConditional %148 %149 %153
        %149 = OpLabel
        %152 = OpLoad %v4float %texColor
               OpStore %bloomColor %152
               OpBranch %150
        %153 = OpLabel
               OpStore %bloomColor %154
               OpBranch %150
        %150 = OpLabel
               OpReturn
               OpFunctionEnd
