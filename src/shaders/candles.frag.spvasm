; SPIR-V
; Version: 1.0
; Generator: Google Shaderc over Glslang; 11
; Bound: 128
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %v_fragTexCoord %v_normal %v_fragPos %v_tangentLightPos %v_tangentFragPos %v_tangentCamPos %outColor %v_tangent
               OpExecutionMode %main OriginUpperLeft
               OpSource GLSL 450
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %color "color"
               OpName %u_texSampler "u_texSampler"
               OpName %v_fragTexCoord "v_fragTexCoord"
               OpName %n "n"
               OpName %v_normal "v_normal"
               OpName %l "l"
               OpName %UniformLighting "UniformLighting"
               OpMemberName %UniformLighting 0 "lightPos"
               OpMemberName %UniformLighting 1 "camPos"
               OpName %u_lighting "u_lighting"
               OpName %v_fragPos "v_fragPos"
               OpName %c "c"
               OpName %DataPushConstant "DataPushConstant"
               OpMemberName %DataPushConstant 0 "isNormalMapping"
               OpName %p_const "p_const"
               OpName %normal "normal"
               OpName %u_normalSampler "u_normalSampler"
               OpName %v_tangentLightPos "v_tangentLightPos"
               OpName %v_tangentFragPos "v_tangentFragPos"
               OpName %v_tangentCamPos "v_tangentCamPos"
               OpName %r "r"
               OpName %h "h"
               OpName %ambient "ambient"
               OpName %diff "diff"
               OpName %diffuse "diffuse"
               OpName %spec "spec"
               OpName %specular "specular"
               OpName %outColor "outColor"
               OpName %v_tangent "v_tangent"
               OpDecorate %u_texSampler DescriptorSet 1
               OpDecorate %u_texSampler Binding 2
               OpDecorate %v_fragTexCoord Location 0
               OpDecorate %v_normal Location 5
               OpMemberDecorate %UniformLighting 0 Offset 0
               OpMemberDecorate %UniformLighting 1 Offset 16
               OpDecorate %UniformLighting Block
               OpDecorate %u_lighting DescriptorSet 0
               OpDecorate %u_lighting Binding 1
               OpDecorate %v_fragPos Location 4
               OpMemberDecorate %DataPushConstant 0 Offset 0
               OpDecorate %DataPushConstant Block
               OpDecorate %u_normalSampler DescriptorSet 1
               OpDecorate %u_normalSampler Binding 3
               OpDecorate %v_tangentLightPos Location 2
               OpDecorate %v_tangentFragPos Location 1
               OpDecorate %v_tangentCamPos Location 3
               OpDecorate %outColor Location 0
               OpDecorate %v_tangent Location 6
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%_ptr_Function_v3float = OpTypePointer Function %v3float
         %10 = OpTypeImage %float 2D 0 0 0 1 Unknown
         %11 = OpTypeSampledImage %10
%_ptr_UniformConstant_11 = OpTypePointer UniformConstant %11
%u_texSampler = OpVariable %_ptr_UniformConstant_11 UniformConstant
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
%v_fragTexCoord = OpVariable %_ptr_Input_v2float Input
    %v4float = OpTypeVector %float 4
%_ptr_Input_v3float = OpTypePointer Input %v3float
   %v_normal = OpVariable %_ptr_Input_v3float Input
%UniformLighting = OpTypeStruct %v3float %v3float
%_ptr_Uniform_UniformLighting = OpTypePointer Uniform %UniformLighting
 %u_lighting = OpVariable %_ptr_Uniform_UniformLighting Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
  %v_fragPos = OpVariable %_ptr_Input_v3float Input
      %int_1 = OpConstant %int 1
%DataPushConstant = OpTypeStruct %int
%_ptr_PushConstant_DataPushConstant = OpTypePointer PushConstant %DataPushConstant
    %p_const = OpVariable %_ptr_PushConstant_DataPushConstant PushConstant
%_ptr_PushConstant_int = OpTypePointer PushConstant %int
       %bool = OpTypeBool
%u_normalSampler = OpVariable %_ptr_UniformConstant_11 UniformConstant
    %float_2 = OpConstant %float 2
    %float_1 = OpConstant %float 1
%v_tangentLightPos = OpVariable %_ptr_Input_v3float Input
%v_tangentFragPos = OpVariable %_ptr_Input_v3float Input
%v_tangentCamPos = OpVariable %_ptr_Input_v3float Input
%float_0_200000003 = OpConstant %float 0.200000003
%_ptr_Function_float = OpTypePointer Function %float
    %float_0 = OpConstant %float 0
   %float_32 = OpConstant %float 32
        %113 = OpConstantComposite %v3float %float_0_200000003 %float_0_200000003 %float_0_200000003
%_ptr_Output_v4float = OpTypePointer Output %v4float
   %outColor = OpVariable %_ptr_Output_v4float Output
  %v_tangent = OpVariable %_ptr_Input_v3float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
      %color = OpVariable %_ptr_Function_v3float Function
          %n = OpVariable %_ptr_Function_v3float Function
          %l = OpVariable %_ptr_Function_v3float Function
          %c = OpVariable %_ptr_Function_v3float Function
     %normal = OpVariable %_ptr_Function_v3float Function
          %r = OpVariable %_ptr_Function_v3float Function
          %h = OpVariable %_ptr_Function_v3float Function
    %ambient = OpVariable %_ptr_Function_v3float Function
       %diff = OpVariable %_ptr_Function_float Function
    %diffuse = OpVariable %_ptr_Function_v3float Function
       %spec = OpVariable %_ptr_Function_float Function
   %specular = OpVariable %_ptr_Function_v3float Function
         %14 = OpLoad %11 %u_texSampler
         %18 = OpLoad %v2float %v_fragTexCoord
         %20 = OpImageSampleImplicitLod %v4float %14 %18
         %21 = OpVectorShuffle %v3float %20 %20 0 1 2
               OpStore %color %21
         %25 = OpLoad %v3float %v_normal
               OpStore %n %25
         %33 = OpAccessChain %_ptr_Uniform_v3float %u_lighting %int_0
         %34 = OpLoad %v3float %33
         %36 = OpLoad %v3float %v_fragPos
         %37 = OpFSub %v3float %34 %36
         %38 = OpExtInst %v3float %1 Normalize %37
               OpStore %l %38
         %41 = OpAccessChain %_ptr_Uniform_v3float %u_lighting %int_1
         %42 = OpLoad %v3float %41
         %43 = OpLoad %v3float %v_fragPos
         %44 = OpFSub %v3float %42 %43
         %45 = OpExtInst %v3float %1 Normalize %44
               OpStore %c %45
         %50 = OpAccessChain %_ptr_PushConstant_int %p_const %int_0
         %51 = OpLoad %int %50
         %53 = OpIEqual %bool %51 %int_1
               OpSelectionMerge %55 None
               OpBranchConditional %53 %54 %55
         %54 = OpLabel
         %58 = OpLoad %11 %u_normalSampler
         %59 = OpLoad %v2float %v_fragTexCoord
         %60 = OpImageSampleImplicitLod %v4float %58 %59
         %61 = OpVectorShuffle %v3float %60 %60 0 1 2
               OpStore %normal %61
         %62 = OpLoad %v3float %normal
         %64 = OpVectorTimesScalar %v3float %62 %float_2
         %66 = OpCompositeConstruct %v3float %float_1 %float_1 %float_1
         %67 = OpFSub %v3float %64 %66
         %68 = OpExtInst %v3float %1 Normalize %67
               OpStore %n %68
         %70 = OpLoad %v3float %v_tangentLightPos
         %72 = OpLoad %v3float %v_tangentFragPos
         %73 = OpFSub %v3float %70 %72
         %74 = OpExtInst %v3float %1 Normalize %73
               OpStore %l %74
         %76 = OpLoad %v3float %v_tangentCamPos
         %77 = OpLoad %v3float %v_tangentFragPos
         %78 = OpFSub %v3float %76 %77
         %79 = OpExtInst %v3float %1 Normalize %78
               OpStore %c %79
               OpBranch %55
         %55 = OpLabel
         %81 = OpLoad %v3float %l
         %82 = OpFNegate %v3float %81
         %83 = OpLoad %v3float %n
         %84 = OpExtInst %v3float %1 Reflect %82 %83
               OpStore %r %84
         %86 = OpLoad %v3float %l
         %87 = OpLoad %v3float %c
         %88 = OpFAdd %v3float %86 %87
         %89 = OpExtInst %v3float %1 Normalize %88
               OpStore %h %89
         %92 = OpLoad %v3float %color
         %93 = OpVectorTimesScalar %v3float %92 %float_0_200000003
               OpStore %ambient %93
         %96 = OpLoad %v3float %l
         %97 = OpLoad %v3float %n
         %98 = OpDot %float %96 %97
        %100 = OpExtInst %float %1 FMax %98 %float_0
               OpStore %diff %100
        %102 = OpLoad %float %diff
        %103 = OpLoad %v3float %color
        %104 = OpVectorTimesScalar %v3float %103 %102
               OpStore %diffuse %104
        %106 = OpLoad %v3float %n
        %107 = OpLoad %v3float %h
        %108 = OpDot %float %106 %107
        %109 = OpExtInst %float %1 FMax %108 %float_0
        %111 = OpExtInst %float %1 Pow %109 %float_32
               OpStore %spec %111
        %114 = OpLoad %float %spec
        %115 = OpVectorTimesScalar %v3float %113 %114
               OpStore %specular %115
        %118 = OpLoad %v3float %ambient
        %119 = OpLoad %v3float %diffuse
        %120 = OpFAdd %v3float %118 %119
        %121 = OpLoad %v3float %specular
        %122 = OpFAdd %v3float %120 %121
        %123 = OpCompositeExtract %float %122 0
        %124 = OpCompositeExtract %float %122 1
        %125 = OpCompositeExtract %float %122 2
        %126 = OpCompositeConstruct %v4float %123 %124 %125 %float_1
               OpStore %outColor %126
               OpReturn
               OpFunctionEnd
